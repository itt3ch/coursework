{"ast":null,"code":"var _jsxFileName = \"d:\\\\coursework\\\\src\\\\components\\\\GraphInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../styles/GraphInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphInput = ({\n  onMatrixSubmit\n}) => {\n  _s();\n  const [vertices, setVertices] = useState(\"\");\n  const [edges, setEdges] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Генеруємо порожню матрицю суміжності на основі кількості вершин\n    const matrix = Array.from({\n      length: vertices\n    }, () => Array.from({\n      length: vertices\n    }, () => 0));\n    onMatrixSubmit(matrix);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0435\\u043D\\u043D\\u044F \\u0434\\u0430\\u043D\\u0438\\u0445 \\u0433\\u0440\\u0430\\u0444\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"graph-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"vertices\",\n        children: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"vertices\",\n        value: vertices,\n        onChange: e => setVertices(e.target.value),\n        min: \"1\",\n        placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043A\\u043B\\u0430\\u0434, 5\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"edges\",\n        children: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0440\\u0435\\u0431\\u0435\\u0440:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"edges\",\n        value: edges,\n        onChange: e => setEdges(e.target.value),\n        min: \"1\",\n        placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043A\\u043B\\u0430\\u0434, 7\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041F\\u043E\\u0431\\u0443\\u0434\\u0443\\u0432\\u0430\\u0442\\u0438 \\u0433\\u0440\\u0430\\u0444\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(GraphInput, \"nZlT4pnZdm8nGIQNFf6BhEWsFWI=\");\n_c = GraphInput;\nexport default GraphInput;\nvar _c;\n$RefreshReg$(_c, \"GraphInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GraphInput","onMatrixSubmit","_s","vertices","setVertices","edges","setEdges","handleSubmit","e","preventDefault","matrix","Array","from","length","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","min","placeholder","required","_c","$RefreshReg$"],"sources":["d:/coursework/src/components/GraphInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./../styles/GraphInput\";\r\n\r\nconst GraphInput = ({ onMatrixSubmit }) => {\r\n    const [vertices, setVertices] = useState(\"\");\r\n    const [edges, setEdges] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Генеруємо порожню матрицю суміжності на основі кількості вершин\r\n        const matrix = Array.from({ length: vertices }, () =>\r\n            Array.from({ length: vertices }, () => 0)\r\n        );\r\n        onMatrixSubmit(matrix);\r\n    };\r\n\r\n    return (\r\n        <section id=\"input-section\">\r\n            <h2>Введення даних графу</h2>\r\n            <form id=\"graph-form\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"vertices\">Кількість вершин:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"vertices\"\r\n                    value={vertices}\r\n                    onChange={(e) => setVertices(e.target.value)}\r\n                    min=\"1\"\r\n                    placeholder=\"Наприклад, 5\"\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"edges\">Кількість ребер:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"edges\"\r\n                    value={edges}\r\n                    onChange={(e) => setEdges(e.target.value)}\r\n                    min=\"1\"\r\n                    placeholder=\"Наприклад, 7\"\r\n                    required\r\n                />\r\n\r\n                <button type=\"submit\">Побудувати граф</button>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default GraphInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEV;IAAS,CAAC,EAAE,MAC5CQ,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEV;IAAS,CAAC,EAAE,MAAM,CAAC,CAC5C,CAAC;IACDF,cAAc,CAACS,MAAM,CAAC;EAC1B,CAAC;EAED,oBACIX,OAAA;IAASe,EAAE,EAAC,eAAe;IAAAC,QAAA,gBACvBhB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BpB,OAAA;MAAMe,EAAE,EAAC,YAAY;MAACM,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBACzChB,OAAA;QAAOsB,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDpB,OAAA;QACIuB,IAAI,EAAC,QAAQ;QACbR,EAAE,EAAC,UAAU;QACbS,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGhB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC7CG,GAAG,EAAC,GAAG;QACPC,WAAW,EAAC,2DAAc;QAC1BC,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEFpB,OAAA;QAAOsB,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/CpB,OAAA;QACIuB,IAAI,EAAC,QAAQ;QACbR,EAAE,EAAC,OAAO;QACVS,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGhB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC1CG,GAAG,EAAC,GAAG;QACPC,WAAW,EAAC,2DAAc;QAC1BC,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEFpB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;AAACjB,EAAA,CA3CIF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}