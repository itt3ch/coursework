{"ast":null,"code":"var _jsxFileName = \"d:\\\\coursework\\\\src\\\\components\\\\BSTVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BinarySearchTree from \"../components/BinarySearchTree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BSTVisualizer = () => {\n  _s();\n  const [tree, setTree] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInsert = () => {\n    if (!inputValue) return;\n    let newTree = tree ? {\n      ...tree\n    } : new BinarySearchTree();\n    newTree.insert(parseInt(inputValue)); // Вставка значення в дерево\n    setTree(newTree); // Оновлення стану дерева\n    setInputValue(\"\"); // Очищення поля вводу\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u043D\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsert,\n      children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0443 \\u0434\\u0435\\u0440\\u0435\\u0432\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BSTVisualizer, {\n      tree: tree.root,\n      searchValue: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(BSTVisualizer, \"56HiYuyc2xNKC+R4SbUKNSjInIA=\");\n_c = BSTVisualizer;\nexport default BSTVisualizer;\nvar _c;\n$RefreshReg$(_c, \"BSTVisualizer\");","map":{"version":3,"names":["React","useState","BinarySearchTree","jsxDEV","_jsxDEV","BSTVisualizer","_s","tree","setTree","inputValue","setInputValue","handleInsert","newTree","insert","parseInt","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","root","searchValue","_c","$RefreshReg$"],"sources":["d:/coursework/src/components/BSTVisualizer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport BinarySearchTree from \"../components/BinarySearchTree\";\r\n\r\nconst BSTVisualizer = () => {\r\n  const [tree, setTree] = useState(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInsert = () => {\r\n    if (!inputValue) return;\r\n    \r\n    let newTree = tree ? { ...tree } : new BinarySearchTree();\r\n    newTree.insert(parseInt(inputValue));  // Вставка значення в дерево\r\n    setTree(newTree);  // Оновлення стану дерева\r\n    setInputValue(\"\");  // Очищення поля вводу\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        placeholder=\"Введіть значення\"\r\n      />\r\n      <button onClick={handleInsert}>Додати у дерево</button>\r\n\r\n      <BSTVisualizer tree={tree.root} searchValue={null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BSTVisualizer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACF,UAAU,EAAE;IAEjB,IAAIG,OAAO,GAAGL,IAAI,GAAG;MAAE,GAAGA;IAAK,CAAC,GAAG,IAAIL,gBAAgB,CAAC,CAAC;IACzDU,OAAO,CAACC,MAAM,CAACC,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC,CAAE;IACvCD,OAAO,CAACI,OAAO,CAAC,CAAC,CAAE;IACnBF,aAAa,CAAC,EAAE,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,gBACEX,OAAA;MACEY,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAER,UAAW;MAClBS,QAAQ,EAAGC,CAAC,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEvDrB,OAAA,CAACC,aAAa;MAACE,IAAI,EAAEA,IAAI,CAACoB,IAAK;MAACC,WAAW,EAAE;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1BID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}