{"ast":null,"code":"var _jsxFileName = \"d:\\\\coursework\\\\src\\\\components\\\\GraphVisualization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/GraphVisualization.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphVisualization({\n  matrix = [],\n  weights = [],\n  vertices = []\n}) {\n  _s();\n  // Ініціалізація стану\n  const [highlightedEdges, setHighlightedEdges] = useState([]);\n\n  // Ефект для оновлення графу\n  useEffect(() => {\n    if (!matrix || vertices.length === 0) return;\n    console.log(\"Матриця суміжності:\", matrix);\n  }, [matrix, vertices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"600\",\n      height: \"400\",\n      children: [vertices.map((vertex, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: vertex.x,\n        cy: vertex.y,\n        r: 20,\n        fill: \"lightblue\",\n        stroke: \"black\",\n        strokeWidth: 2\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)), matrix.map((row, i) => row.map((value, j) => {\n        if (value && i < j) {\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: vertices[i].x,\n            y1: vertices[i].y,\n            x2: vertices[j].x,\n            y2: vertices[j].y,\n            stroke: highlightedEdges.includes(`${i}-${j}`) ? \"red\" : \"gray\",\n            strokeWidth: 2\n          }, `${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this);\n        }\n        return null;\n      })), vertices.map((vertex, index) => /*#__PURE__*/_jsxDEV(\"text\", {\n        x: vertex.x,\n        y: vertex.y,\n        textAnchor: \"middle\",\n        alignmentBaseline: \"middle\",\n        fontSize: \"12px\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(GraphVisualization, \"PwFS0dXqhG0JHL2MPjtAbc/YEJw=\");\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GraphVisualization","matrix","weights","vertices","_s","highlightedEdges","setHighlightedEdges","length","console","log","className","children","width","height","map","vertex","index","cx","x","cy","y","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","row","i","value","j","x1","y1","x2","y2","includes","textAnchor","alignmentBaseline","fontSize","_c","$RefreshReg$"],"sources":["d:/coursework/src/components/GraphVisualization.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/GraphVisualization.css\";\r\n\r\nfunction GraphVisualization({ matrix = [], weights = [], vertices = [] }) {\r\n    // Ініціалізація стану\r\n    const [highlightedEdges, setHighlightedEdges] = useState([]);\r\n\r\n    // Ефект для оновлення графу\r\n    useEffect(() => {\r\n        if (!matrix || vertices.length === 0) return;\r\n        console.log(\"Матриця суміжності:\", matrix);\r\n    }, [matrix, vertices]);\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"graph-container\">\r\n            <svg width=\"600\" height=\"400\">\r\n                {/* Відображення вершин */}\r\n                {vertices.map((vertex, index) => (\r\n                    <circle\r\n                        key={index}\r\n                        cx={vertex.x}\r\n                        cy={vertex.y}\r\n                        r={20}\r\n                        fill=\"lightblue\"\r\n                        stroke=\"black\"\r\n                        strokeWidth={2}\r\n                    />\r\n                ))}\r\n\r\n                {/* Відображення ребер */}\r\n                {matrix.map((row, i) =>\r\n                    row.map((value, j) => {\r\n                        if (value && i < j) {\r\n                            return (\r\n                                <line\r\n                                    key={`${i}-${j}`}\r\n                                    x1={vertices[i].x}\r\n                                    y1={vertices[i].y}\r\n                                    x2={vertices[j].x}\r\n                                    y2={vertices[j].y}\r\n                                    stroke={highlightedEdges.includes(`${i}-${j}`) ? \"red\" : \"gray\"}\r\n                                    strokeWidth={2}\r\n                                />\r\n                            );\r\n                        }\r\n                        return null;\r\n                    })\r\n                )}\r\n\r\n                {/* Відображення номерів вершин */}\r\n                {vertices.map((vertex, index) => (\r\n                    <text\r\n                        key={index}\r\n                        x={vertex.x}\r\n                        y={vertex.y}\r\n                        textAnchor=\"middle\"\r\n                        alignmentBaseline=\"middle\"\r\n                        fontSize=\"12px\"\r\n                    >\r\n                        {index + 1}\r\n                    </text>\r\n                ))}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GraphVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}