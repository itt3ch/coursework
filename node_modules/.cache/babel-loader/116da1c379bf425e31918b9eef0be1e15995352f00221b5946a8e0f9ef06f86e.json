{"ast":null,"code":"var _jsxFileName = \"/home/andrii/proj/coursework/src/components/GraphVisualization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GraphVisualization.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphVisualization({\n  matrix = [],\n  weights = [],\n  vertices = []\n}) {\n  _s();\n  if (!matrix || !vertices || vertices.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0413\\u0440\\u0430\\u0444 \\u043D\\u0435 \\u0456\\u043D\\u0456\\u0446\\u0456\\u0430\\u043B\\u0456\\u0437\\u043E\\u0432\\u0430\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }, this);\n  }\n  const [highlightedEdges, setHighlightedEdges] = useState([]);\n  useEffect(() => {\n    // Оновлення візуалізації, якщо змінюється стан графу\n    console.log(\"Матриця суміжності: \", matrix);\n  }, [matrix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"600\",\n      height: \"400\",\n      children: [vertices.map((vertex, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: vertex.x,\n        cy: vertex.y,\n        r: 20,\n        fill: \"lightblue\",\n        stroke: \"black\",\n        strokeWidth: 2\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), matrix.map((row, i) => row.map((value, j) => {\n        if (value && i < j) {\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: vertices[i].x,\n            y1: vertices[i].y,\n            x2: vertices[j].x,\n            y2: vertices[j].y,\n            stroke: highlightedEdges.includes(`${i}-${j}`) ? \"red\" : \"gray\",\n            strokeWidth: 2\n          }, `${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this);\n        }\n        return null;\n      })), vertices.map((vertex, index) => /*#__PURE__*/_jsxDEV(\"text\", {\n        x: vertex.x,\n        y: vertex.y,\n        textAnchor: \"middle\",\n        alignmentBaseline: \"middle\",\n        fontSize: \"12px\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphVisualization, \"PwFS0dXqhG0JHL2MPjtAbc/YEJw=\");\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GraphVisualization","matrix","weights","vertices","_s","length","children","fileName","_jsxFileName","lineNumber","columnNumber","highlightedEdges","setHighlightedEdges","console","log","className","width","height","map","vertex","index","cx","x","cy","y","r","fill","stroke","strokeWidth","row","i","value","j","x1","y1","x2","y2","includes","textAnchor","alignmentBaseline","fontSize","_c","$RefreshReg$"],"sources":["/home/andrii/proj/coursework/src/components/GraphVisualization.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GraphVisualization.css\";\r\n\r\nfunction GraphVisualization({ matrix = [], weights = [], vertices = [] }) {\r\n  if (!matrix || !vertices || vertices.length === 0) {\r\n      return <div>Граф не ініціалізовано</div>;\r\n  }  \r\n  const [highlightedEdges, setHighlightedEdges] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Оновлення візуалізації, якщо змінюється стан графу\r\n    console.log(\"Матриця суміжності: \", matrix);\r\n  }, [matrix]);\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <svg width=\"600\" height=\"400\">\r\n        {/* Відображення вершин */}\r\n        {vertices.map((vertex, index) => (\r\n          <circle\r\n            key={index}\r\n            cx={vertex.x}\r\n            cy={vertex.y}\r\n            r={20}\r\n            fill=\"lightblue\"\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n          />\r\n        ))}\r\n\r\n        {/* Відображення ребер */}\r\n        {matrix.map((row, i) =>\r\n          row.map((value, j) => {\r\n            if (value && i < j) {\r\n              return (\r\n                <line\r\n                  key={`${i}-${j}`}\r\n                  x1={vertices[i].x}\r\n                  y1={vertices[i].y}\r\n                  x2={vertices[j].x}\r\n                  y2={vertices[j].y}\r\n                  stroke={highlightedEdges.includes(`${i}-${j}`) ? \"red\" : \"gray\"}\r\n                  strokeWidth={2}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })\r\n        )}\r\n\r\n        {/* Відображення номерів вершин */}\r\n        {vertices.map((vertex, index) => (\r\n          <text\r\n            key={index}\r\n            x={vertex.x}\r\n            y={vertex.y}\r\n            textAnchor=\"middle\"\r\n            alignmentBaseline=\"middle\"\r\n            fontSize=\"12px\"\r\n          >\r\n            {index + 1}\r\n          </text>\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}